# CLT и нормальное распределение

import numpy as np
from scipy import stats
import matplotlib.pyplot as plt


data = stats.norm(0, 3)  # Создаем нормальное распределение со средним 0 и стандартным отклонением 3

x = np.linspace(-10, 10, 1000)  # Создаем ось Х из 1000 значений в интервале от -10 до 10
# Альтернативный способ создания оси Х из 1000 значений в интервале от -10 до 10 с заданием шага(0.02)
# x = np.arange(-10,10,0.02)


# Кумулятивная функция распределения CDF(x) рассчитывается с помощью метода .cdf:
# CDF = data.cdf(x)  # Создаем функцию CDF от значений в интервале х
# plt.plot(x, CDF)  # Строим график СDF
# plt.show()

# Функция плотности вероятности распределения PDF(x) рассчитывается с помощью метода .pdf:
# PDF = data.pdf(x)  # Создаем функкцию PDF от значений в интервале х
# plt.plot(x, PDF)  # Строим график PDF
# plt.show()

# Функция выживаемости SF(x) рассчитывается с помощью метода .sf:
# SF = data.sf(x) # Создаем функкцию SF от значений в интервале х
# plt.plot(x, SF) # Строим график SF
# plt.show()


# Квантиль-функция распределения PPF(x) рассчитывается с помощью метода .ppf:
# PPF = data.ppf(x)  # Создаем функкцию PPF от значений в интервале х
# plt.plot(x, PPF)  # Строим график PPF
# plt.show()

# Обратная функция выживаемости ISF(x) рассчитывается с помощью метода .isf:
# ISF = data.isf(x) # Создаем функкцию ISF от значений в интервале х
# plt.plot(x, ISF)  # Строим график ISF
# plt.show()


# data_2 = stats.norm(50, 2).cdf(46).round(5)


"""Рассчитайте значение функции выживаемости в точке х = 34 
для нормального распределения со средним 30 и стандартным отклонением 4. 
Выведите полученное значение типа float на экран, 
округлив до 5 знаков после запятой."""

SF = stats.norm(30, 4).sf(34).round(5)


"""Рассчитайте значение функции плотности вероятности распределения 
в точке х = 12.11 для нормального распределения со средним 0 и 
стандартным отклонением 4.54. 
Выведите полученное значение типа float на экран, округлив до 5 знаков после запятой."""

pdf = stats.norm(0, 4.54).pdf(12.11).round(5)



"""Рассчитайте, чему равна вероятность попадания случайной величины 
в интервал от -1 до 2 для для нормального распределения со средним 0 
и стандартным отклонением 1.95. 
Выведите полученное значение типа float на экран, округлив до 5 знаков после запятой."""

pdf_1 = round(stats.norm(0, 1.95).cdf(2) - stats.norm(0, 1.95).cdf(-1), 5)


"""Микрокредитные организации имеют значение доли проблемных кредитов (NPL) 
в кредитном портфеле в среднем на уровне 7,45% по сектору. 
Стандартное отклонение равно 1.36%. Считаем, что распределение является нормальным. 
Чему равна вероятность того, что случайно выбранная микрокредитная организация 
будет иметь долю NPL в портфеле, не превышающую 8,99%? 
Выведите полученное значение типа float на экран, округлив до 5 знаков после запятой."""

cdf_2 = stats.norm(7.45, 1.36).cdf(8.99).round(5)



"""В городе 876 832 зданий. Стандартное отклонение значений высоты зданий 
равно 5,34 метра. Считаем, что распределение является нормальным. 
Чему равно среднее значение распределений высот зданий, 
если 95% всех зданий имеют высоту больше 48,5 метра. 
Выведите полученное значение типа float на экран, округлив до 2 знаков после запятой."""

zero_mean = stats.norm(0, 5.34)
zm_quantile = zero_mean.isf(0.95)
mean = 48.5 - zm_quantile
# print(mean.round(2))


"""
В США средний уровень годового дохода работника с высшим образованием 
составляет 78,97 тысяч долларов со стандартным отклонением 13,23 тысяч долларов, 
а работника без высшего образования - 46,65 тысяч долларов 
со стандартным отклонением 8,11 тысяч долларов. Какова вероятность того, 
что случайно выбранный работник с высшим образованием будет иметь больший годовой доход, 
чем случайно выбранный работник без высшего образования? 
Считаем, что распределения являются нормальными. 
Выведите полученное значение типа float на экран, округлив до 5 знаков после запятой.

"""

data_3 = stats.norm(78.97-46.65, (13.23**2+8.11**2)**0.5)
res = data_3.sf(0).round(5)


