# –û–¥–Ω–æ–≤—ã–±–æ—Ä–æ—á–Ω—ã–π t-—Ç–µ—Å—Ç
# –î–≤—É—Ö–≤—ã–±–æ—Ä–æ—á–Ω—ã–π t-—Ç–µ—Å—Ç & —Ç–µ—Å—Ç –£—ç–ª—á–∞

import pandas as pd
from scipy.stats import ttest_1samp



sample = [7, 8, 9, 13, 10, 9, 9, 10, 9, 11, 12, 8, 9, 11, 10, 9, 10]

# –ü—Ä–æ–≤–µ–¥–µ–º –æ–¥–Ω–æ–≤—ã–±–æ—Ä–æ—á–Ω—ã–π t-—Ç–µ—Å—Ç —Å –ø–æ–º–æ—â—å—é .ttest_1samp —Å –Ω—É–ª–µ–≤–æ–π –≥–∏–ø–æ—Ç–µ–∑–æ–π –æ —Ç–æ–º, —á—Ç–æ ùúá=9.71:
for_p_1 = ttest_1samp(sample, 9.71)

# –ü–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ p-value = 0,8646 —Å–∏–ª—å–Ω–æ –±–æ–ª—å—à–µ 0,05, –ø–æ—ç—Ç–æ–º—É —É –Ω–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Å–Ω–æ–≤–∞–Ω–∏–π,
# —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ä–≥–Ω—É—Ç—å –Ω—É–ª–µ–≤—É—é –≥–∏–ø–æ—Ç–µ–∑—É –∏ —É—Ç–≤–µ—Ä–∂–¥–∞—Ç—å, —á—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏
# –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç 9,71.

# _________________________________________________________

"""
–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ–≤—ã–±–æ—Ä–æ—á–Ω—ã–π t-—Ç–µ—Å—Ç –æ —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è –ì–° 
–∑–Ω–∞—á–µ–Ω–∏–π –≤–µ—Å–∞ –º—É–∂—á–∏–Ω –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ –î–∂–µ—Ä—Å–∏ –∑–Ω–∞—á–µ–Ω–∏—é 86.44. 
–£ –Ω–∞—Å –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—ã–±–æ—Ä–∫–µ, —Å–æ—Å—Ç–æ—è—â–µ–π –∏–∑ 40 –º—É–∂—á–∏–Ω –æ—Å—Ç—Ä–æ–≤–∞ –î–∂–µ—Ä—Å–∏. 
–í—ã–±–æ—Ä–æ—á–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ —Ä–∞–≤–Ω–æ 83.55, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ 7.74. 
–í—ã–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ p-value (pvalue) –Ω–∞ —ç–∫—Ä–∞–Ω, –æ–∫—Ä—É–≥–ª–∏–≤ –¥–æ 5 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.
"""

import pandas as pd
import numpy as np


weight = np.array([
    100, 82, 92, 88, 78, 85, 89, 79, 61, 87, 89, 87, 89, 86, 79, 78, 78, 85, 89, 79, 61, 87, 92, 88,
    78, 85, 79, 78, 78, 85, 101, 87, 89, 86, 79, 78, 78, 85, 89, 79])
sd = 7.74
n = 40

t = (sum(weight) / len(weight) - 86.44) / (sd / (n**0.5))
res = ttest_1samp(weight, 86.44)

for_p_2 = ttest_1samp(weight, 86.44).pvalue.round(5)
# _________________________________________________________

"""
–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ–≤—ã–±–æ—Ä–æ—á–Ω—ã–π t-—Ç–µ—Å—Ç –æ —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ –º–∞—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ S&P 500 –∑–Ω–∞—á–µ–Ω–∏—é 0.00087. 
–ò–∑–≤–µ—Å—Ç–Ω–∞—è –Ω–∞–º –≤—ã–±–æ—Ä–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 1254 –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–Ω–¥–µ–∫—Å–∞ S&P 500. 
–í—ã–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ t-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (statistic) –Ω–∞ —ç–∫—Ä–∞–Ω, –æ–∫—Ä—É–≥–ª–∏–≤ –¥–æ 5 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.
"""
df_1 = pd.read_csv('SP_500_returns.csv', sep=';')

def solution_1(A): # A - –Ω–µ–∫–∏–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º
    x = ttest_1samp(A['Return_SP_500'], 0.00087).statistic.round(5)
    return x

# print(solution_1(df_1))


# _________________________________________________________
# –î–≤—É—Ö–≤—ã–±–æ—Ä–æ—á–Ω—ã–π t-—Ç–µ—Å—Ç & —Ç–µ—Å—Ç –£—ç–ª—á–∞

sample_x = [7, 8, 9, 13, 10, 9, 9, 10, 9, 11, 12, 8, 9, 11, 10, 9, 10]
sample_y = [9, 12, 11, 11, 12, 8, 7, 9, 8, 10, 11, 10, 9, 10, 11, 9, 8]

# –ü—Ä–æ–≤–µ—Ä–∏–º –≤—ã–±–æ—Ä–æ—á–Ω—ã–µ –¥–∏—Å–ø–µ—Ä—Å–∏–∏:
var_x = np.var(sample_x)
var_y = np.var(sample_y)

# –ü—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∞ –æ –≥–æ–º–æ–≥–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∏—Å–ø–µ—Ä—Å–∏–π —Å–æ–±–ª—é–¥–∞–µ—Ç—Å—è.
# –ú–æ–∂–µ–º –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –¥–≤—É—Ö–≤—ã–±–æ—Ä–æ—á–Ω—ã–π t-—Ç–µ—Å—Ç –¥–ª—è –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –≤—ã–±–æ—Ä–æ–∫ —Å –ø–æ–º–æ—â—å—é ttest_ind
# —Å –Ω—É–ª–µ–≤–æ–π –≥–∏–ø–æ—Ç–µ–∑–æ–π –æ —Ç–æ–º, —á—Ç–æ ùúáùë•=ùúáùë¶


from scipy.stats import ttest_ind


res_test = ttest_ind(sample_x, sample_y)

# –ü–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ p-value = 0,909 —Å–∏–ª—å–Ω–æ –±–æ–ª—å—à–µ 0,05, –ø–æ—ç—Ç–æ–º—É —É –Ω–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Å–Ω–æ–≤–∞–Ω–∏–π,
# —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ä–≥–Ω—É—Ç—å –Ω—É–ª–µ–≤—É—é –≥–∏–ø–æ—Ç–µ–∑—É –æ —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–∂–∏–¥–∞–Ω–∏–π –¥–≤—É—Ö –≥–µ–Ω–µ—Ä–∞–ª—å–Ω—ã—Ö —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–µ–π.


# _________________________________________________________

# –ï—Å—Ç—å —Ç–∞–∫–∂–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –¥–≤—É—Ö–≤—ã–±–æ—Ä–æ—á–Ω–æ–≥–æ t-—Ç–µ—Å—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –≤—ã–±–æ—Ä–æ–∫ –º–µ–∂–¥—É —Å–æ–±–æ–π
# –ø—É—Ç–µ–º –∑–∞–¥–∞–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∫–∞–∂–¥–æ–π –∏–∑ –¥–≤—É—Ö –≤—ã–±–æ—Ä–æ–∫
# (mean_x = 65, sd_x = 7, n_x = 1000 –∏ mean_x = 72, sd_x = 9, n_x = 1000) —Å –ø–æ–º–æ—â—å—é ttest_ind_from_stats:

from scipy.stats import ttest_ind_from_stats

s = ttest_ind_from_stats(65, 7, 1000, 72, 9, 1000)

"""
–û—Ü–µ–Ω–∏—Ç–µ –≥–æ–º–æ–≥–µ–Ω–Ω–æ—Å—Ç—å –¥–∏—Å–ø–µ—Ä—Å–∏–π. 
–í—ã–≤–µ–¥–∏—Ç–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –±–æ–ª—å—à–µ–π –≤—ã–±–æ—Ä–æ—á–Ω–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–∏ –∫ –º–µ–Ω—å—à–µ–π –≤—ã–±–æ—Ä–æ—á–Ω–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–∏ –Ω–∞ —ç–∫—Ä–∞–Ω, 
–æ–∫—Ä—É–≥–ª–∏–≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ 5 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.
"""



import pandas as pd

df_2 = pd.DataFrame({
    'Year': [1971, 1972, 2019, 2020],
    'China': [1.995611, 1.849711, 2.563502, 1.434195],
    'US': [3.073314, 0.841075, 2.473712, -1.408486]})
# print(df)

# var_China = np.var(df_2['China'])
# var_US = np.var(df_2['US'])
# x = var_US / var_China if var_US >= var_China else var_China / var_US
#
# print(x)

def solution_2(A): # A - –Ω–µ–∫–∏–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º
    var_China = np.var(A['China'])
    var_US = np.var(A['US'])
    x = var_US / var_China if var_US >= var_China else var_China / var_US
    return round(x, 5)

for_p_3 = solution_2(df_2)


# _________________________________________________________
"""
–ï—Å—Ç—å –¥–≤–µ –≤—ã–±–æ—Ä–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π —Å—Ä–µ–¥–Ω–µ–≥–æ–¥–æ–≤–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞ –≤ –°–®–ê –∏ –ö–∏—Ç–∞–µ —Å 1971 –ø–æ 2019 –≥–æ–¥. 
–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π t-—Ç–µ—Å—Ç –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ —Å—Ä–µ–¥–Ω–∏—Ö. 
–í—ã–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ p-value –Ω–∞ —ç–∫—Ä–∞–Ω, –æ–∫—Ä—É–≥–ª–∏–≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ 5 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.

"""

df_3 = pd.DataFrame({
    'Year': [1971, 1972, 2019, 2020],
    'China': [1.995611, 1.849711, 2.563502, 1.434195],
    'US': [3.073314, 0.841075, 2.473712, -1.408486]})

ress = ttest_ind(df_3.China, df_3.US)
for_p_4 = round(ress.pvalue, 5)

# _________________________________________________________


df = pd.DataFrame({
    'test': [29.07, 22.60, 25.22, 21.63, 22.83, 21.46, 23.77],
    'control': [29.91, 28.44, 30.82, 27.42, 20.14, 32.44, 18.99]})

from scipy.stats import kstest


# –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–ø–µ—Ä—Å–∏–π –Ω–∞ –≥–æ–º–æ–≥–µ–Ω–Ω–æ—Å—Ç—å
var_test, var_control = np.var(df['test']), np.var(df['control'])

# –µ—Å–ª–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –±–æ–ª—å—à–µ–π –¥–∏—Å–ø–µ—Ä—Å–∏–∏ –∫ –º–µ–Ω—å—à–µ–π –º–µ–Ω—å—à–µ 4, —Ç–æ –≥–æ–º–æ–≥–µ–Ω–Ω—ã
def homogenous(var_x, var_y):
    res = 'Yes' if max(var_x, var_y) / min(var_x, var_y) < 4 else 'No'
    print(res)

homogenous(var_test, var_control)


# –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç –ö–æ–ª–º–æ–≥–æ—Ä–æ–≤–∞-–°–º–∏—Ä–Ω–æ–≤–∞

# print(kstest(df.test, 'norm'))
# print(kstest(df.control, 'norm'))



r = ttest_ind(df.test, df.control)
print(round(ttest_ind(df.test, df.control).pvalue, 5))